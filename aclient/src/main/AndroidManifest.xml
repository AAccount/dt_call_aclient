<?xml version="1.0" encoding="utf-8"?>
<manifest package="dt.call.aclient"
          xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools">

    <uses-permission android:name="android.permission.INTERNET"/> <!-- send/receive commands using custom protocol and call data -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/> <!-- to get the public key of the server -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/> <!-- check if there is internet to retry login on broken connection / automatically relogin when going from no internet -->
    <uses-permission android:name="android.permission.RECORD_AUDIO"/> <!-- so the other person can hear you talk -->
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS"/> <!-- switch ear piece/speaker phone -->
    <uses-permission android:name="android.permission.VIBRATE"/> <!-- vibrate when in silent mode -->
    <uses-permission android:name="android.permission.WAKE_LOCK"/> <!-- immediately flash the incoming call screen. also android 9+ MUST keep the screen on in call because when the screen is off network io dies (another stupid "battery savings") -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>

    <!-- turn on the screen after the cell phone hasn't been used in a while -->
    <!-- allowBackup=false to prevent automatic cloud backup which will unknowingly leak your information. -->
    <!-- the goal is to prevent unknowingly/unintentionally sending your information to someone else's servers -->
    <!--  -->
    <!-- if you want to backup your settings, you have to root your phone and do it locally. if you choose to upload -->
    <!-- the backup you made by rooting to a cloud service that you're not hosting (or know the hoster) -->
    <!-- then it's knowingly leaking, not unknowingly anymore. the choice is yours -->
    <application
        android:allowBackup="false"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        tools:replace="android:allowBackup">

        <!-- Handles resign-in when internet dies and when the socket dies -->
        <!-- Also handles the heartbeat service -->
        <receiver android:name=".background.BackgroundManager">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
                <action android:name="dt.call.aclient.relogin"/>
                <action android:name="dt.call.aclient.HAS_INTERNET"/>
            </intent-filter>
        </receiver>

        <!-- Listens for commands/responses from the server and reacts appropriately -->
        <service
            android:name=".background.CmdListener"
            android:exported="false"/>

        <!-- Manual workaround for CONNECTIVITY_CHANGE disappearing in android 7.0+ -->
        <service
            android:name=".background.JobServiceReceiver"
            android:permission="android.permission.BIND_JOB_SERVICE"/>

        <!-- First run server information screen -->
        <activity
            android:name=".screens.InitialServer"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <!-- First run user information screen -->
        <activity
            android:name=".screens.InitialUserInfo"
            android:label="@string/initial_user_title"
            android:parentActivityName=".screens.InitialServer">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".screens.InitialServer"/>
        </activity>

        <!-- User main/home screen -->
        <activity
            android:name=".screens.UserHome"
            android:label="@string/user_home_title"
            android:launchMode="singleTop">
        </activity>

        <!-- Voice call screen -->
        <!-- Don't allow orientation changes because the activity is recreated while the 2 threads are still alive... -->
        <!-- causes some bad stuff to happen. Also no value of the landscape layout for this screen -->
        <activity
            android:name=".screens.CallMain"
            android:configChanges="orientation|keyboardHidden"
            android:label="@string/call_main_title"
            android:launchMode="singleTop"
            android:parentActivityName=".screens.UserHome"
            android:screenOrientation="portrait">
        </activity>

        <!-- Incoming call screen -->
        <!-- Orientation change doesn't look right. Also causes a crash with the vibrator and ringtone objects disappearing -->
        <!-- and reappearing while the old ones were still doing something. -->
        <activity
            android:name=".screens.CallIncoming"
            android:configChanges="orientation|keyboardHidden"
            android:label="@string/call_incoming_title"
            android:launchMode="singleTop"
            android:screenOrientation="portrait">
        </activity>

        <!-- File based logging viewer -->
        <activity
            android:name=".screens.LogViewer2"
            android:label="@string/log_viewer2_title"
            android:launchMode="singleTop">
            <meta-data
            android:name="android.support.PARENT_ACTIVITY"
            android:value=".screens.UserHome"/>
        </activity>

        <!-- About this app screen -->
        <activity
            android:name=".screens.About"
            android:label="@string/about_title"
            android:launchMode="singleTop">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".screens.UserHome"/>
        </activity>

        <!-- Public key management screen -->
        <activity
            android:name=".screens.PublicKeyManagement"
            android:label="@string/public_key_mgmt_title"
            android:launchMode="singleTop">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".screens.UserHome"/>
        </activity>

        <!-- Public key details screen -->
        <activity
            android:name=".screens.PublicKeyDetails"
            android:label="@string/public_key_deatils_title"
            android:launchMode="singleTop"
            android:parentActivityName=".screens.PublicKeyManagement">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="dt.call.aclient.screens.PublicKeyManagement"/>
        </activity>

        <!-- Settings screen -->
        <activity
            android:name=".screens.DTSettings"
            android:label="@string/settings_title"
            android:parentActivityName=".screens.UserHome">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="dt.call.aclient.screens.UserHome"/>
        </activity>
    </application>

</manifest>